// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          Role      @default(USER)
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now())
}

model ImageFolder {
  id        String   @id @default(cuid())
  name      String   @unique
  secret    String?  @db.Char(6)
  createdAt DateTime @default(now())

  parent    ImageFolder? @relation("folder_Children", fields: [parent_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  parent_id String?

  children ImageFolder[] @relation("folder_Children")
  image    Image[]

  @@index([parent_id])
}

model Image {
  id        String   @id @default(cuid())
  title     String
  createdAt DateTime @default(now())
  hidden    Boolean  @default(false)

  keyword       keyword[]
  ImageFolder   ImageFolder @relation(fields: [imageFolderId], references: [id])
  imageFolderId String

  @@index([imageFolderId])
}

model keyword {
  id      String @id @default(cuid())
  name    String
  imageId String
  image   Image  @relation(fields: [imageId], references: [id])

  @@index([imageId])
}

enum Role {
  ADMIN
  USER
  DEV
}
